DB='mongodb+srv://Achenson:<password>@mongo-for-fcc-13gh5.mongodb.net/graphql_test?retryWrites=true&w=majority'

^ <password> - without this angle brackets!

^graphql_test - name of the db that the document will we saved to! name of the collection will be infered automatically

GraphQLNonNull - preventing users from not entering all data in mutation

client -> clone from repo, then hidden folder .git was deleted so this could be one repo consisting of client and server

// useMutation mutate function does not call `onCompleted`!
 // so onCompleted can only be passed to initial hook
// workaround: useMutation returns a Promise

schema.js -> promise used, so that resolve function can return a value from Mongoose method,
which is needed on the pro

testing tokens with postman:
[body-graphql] 1. login querry to geneterate token, copy the token
2. [authorisation beaere token] paste token (without ""!)
3. make protected querry
no body-pareser being used





issues:
DONE 1. React: Login <Route> warning DONE
DONE 2. warning: SingleStat "key" DONE
DONE 3. problems with undefined for disable button itp? DONE (if statements moved to useEffect)
4. changePassword! other repos won't work!
DONE 5. clicking Login it the article is not loaded yet couse errors DONE
DONE 6. checking if email is already taken: is in Register component, but it would be better if it was in schema.js?
but problems with addingScore to user automatically DONE (partially checked in schema, partially on the frontend)
XX 7. noCache in getStatsQuerry in Stats.js -> only temp solution? 
https://github.com/apollographql/react-apollo/issues/2202 XX noCache deleted
8. revokingRefreshTokens -> inc tokenVersion about 3 times instead of 1??
DONE 9. revoikingRefreshTokens -> no refreshing, but what about login? DONE
DONE 10. same-site cookies? !! (frontend console) DONE
DONE 11. error when the timer reaches 0 and the user is not logged in DONE
12. app starting - wrong route?



to do:
DONE 1. move graphql queries to different file DONE

DONE 2. set headers in apollo (index.js in client) DONE
DONE 3. context, req, res? DONE
DONE 3.5 all route guarding DONE?
DONE 3.55. Test guarding with short lived TOKEN DONE
DONE 3.6 more error displays when redirected to login DONE
DONE 4. login -> res send cookie with refresh token DONE
DONE (5. revoking tokens (at the end?) ) TOKEN
DONE 5. refresh token api route DONE
DONE 5.5. token is being refreshed, but the login does not persist yet DONE
DONE 6. persisiting session after refresh -> in the top of the App, refresh token will be used DONE
DONE 6.5 persisting session after accessToken expired (migrating from apollo-boost to apollo-client with apollo-link!) DONE
DONE 7. put (check how to come with proper secret: string min. 32 length, the longer the better) secrets in .env file DONE 
DONE 8. [old problem?] changing stats don't change timer setting automatically. DONE (changing Stats change timer, but only after
stats are closed)
DONE 10. token will require only ID, not email? DONE
11. changing module.export to imports?
DONE [optional] 12. createrefreshToken in a new file 1:15:00 DONE
12. check: network-only policy for useQuery?
13. style initiall loading in the App
DONE 14 clear deleteScore postaction! DONE
15. commentOut Test in the end
16. change accessToken expiration in the end
17. notes -> document all the jwt logic
DONE 18. fill all useEffect deps DONE
19. Deployment? 
20. [optional] make 2 files out of schema? (resolvers &  ...)
DONE 21. [optional] show authenticated user name(see jwt video) DONE
DONE 22. password retrieval system? DONE 
XXX 22. email confirmation system?XXX password retrieval will suffice
23. redux -> importing acions instead of strings?
XXX 24. merge Main & Display? XXX 
DONE 25. delete unused components (2? Fetch & Main old version) DONE
DONE 26. Clean props in Main & Display DONE
DONE 27. 2 components out of Display? DONE AllRenders added
28. helmet, securtiy
DONE 29. email or username, login consistency (+ proper checking in addUser in schema) DONE
30. concurrent start in dev mode
DONE 31. check JWT video comments -> changes? DONE (cookieParser only in one route, proper cookie exp date)
DONE 32. clean passed props in components DONE AllRenders cleaned, more component connectet do store
33. more time options
34. function imports consistency
DONE 35. profile insead of stats in authenticationUI DONE
DONE 36. change password DONE
DONE 37. delete account DONE
DONE 38. consistency - Register (& Login) can have less store connection same as PasswordChange? + DONE
DONE 38.25. Register & Login reseting each other -> more logical code needed DONE 
38.5. reset state when first mounts or when unmounting consistency
39. PasswordChange, Login - css classes instead of inline?
40. "x" in Stats?
DONE 41. clean Main props DONE
DONE 42. test closing/opening components when the timer is running! (State ?Stats? doensn't work properly?) DONE
43. About text somewhere in Hints or in Header?
44. test routes when typed in address
45. final test on chrome
DONE 46. schema - async consistency? DONE
47. hot module reload?
48. check redis video
DONE 49. authData token expiration not needed? DONE
50. better email/password validation across the app?
DONE 51. clean PasswordChange & PassRetrival redux connection DONE
52. passwordRetrieval - better name? component name & header
DONE 53. PasswordForgotten - disabling button DONE
54. try catch consistency - try catch everywhere?
DONE 55. Login - not looking good? DONE
56. test app without net connection
DONE 57. changePassword - "failed to update password" <- more specific? DONE
58. all console warnings
DONE 59. closing Stats should not reset timer! DONE
DONE 60. pausing on clicking profile DONE
DONE 61. Stats working consistency in profile * lowerUI DONE
63. clean unused store connections in the End (Register, PasswordForgot...)






apollo structure:

in App:
updating stats after counter reaches 0 -> passing addScore to  !!==updateScor_postAction==!!, where getStatsQuerry is refetched

in Stats:
getStatsQuery for setting redux state - stats state is being used in Stats for deleting (moved from App)
updating stats after deleting current stats, refetching getStatsQuery

in Register: adding new user and adding empty score right away (addNewUser_postAction not used anymore!)